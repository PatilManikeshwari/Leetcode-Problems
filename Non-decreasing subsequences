Given an integer array nums, return all the different possible non-decreasing subsequences of the given array with at least two elements. You may return the answer in any order.

 

Example 1:

Input: nums = [4,6,7,7]
Output: [[4,6],[4,6,7],[4,6,7,7],[4,7],[4,7,7],[6,7],[6,7,7],[7,7]]
Example 2:

Input: nums = [4,4,3,2,1]
Output: [[4,4]]

Solution--

class Solution:
    def findSubsequences(self, nums: List[int]) -> List[List[int]]:
        def fre(l):
            for i in range(len(l)-1):
                if l[i]>l[i+1]:
                    return False
            return True

        l=[]
        for i in range(2,len(nums)+1):
            for j in combinations(nums,i):
                if fre(list(j)):
                    if list(j) not in l:
                        l.append(list(j))
        return list(l)
