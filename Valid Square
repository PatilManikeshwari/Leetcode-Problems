Given the coordinates of four points in 2D space p1, p2, p3 and p4, return true if the four points construct a square.

The coordinate of a point pi is represented as [xi, yi]. The input is not given in any order.

A valid square has four equal sides with positive length and four equal angles (90-degree angles).

 

Example 1:

Input: p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,1]
Output: true
Example 2:

Input: p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,12]
Output: false
Example 3:

Input: p1 = [1,0], p2 = [-1,0], p3 = [0,1], p4 = [0,-1]
Output: true


Solution--

class Solution:
    def validSquare(self, p1: List[int], p2: List[int], p3: List[int], p4: List[int]) -> bool:
        points=[p1,p2,p3,p4]
        dist=[]
        def cal(p1,p2):
            return (p1[0]-p2[0])**2 + (p1[1]-p2[1])**2
        for i in range(4):
            for j in range(i+1,4):
                dist.append(cal(points[i],points[j]))
        dist.sort()
        return (
            dist[0]>0 and dist[0]==dist[1]==dist[2]==dist[3] and dist[4]==dist[5] and dist[4]==2*dist[0]
        )
        
