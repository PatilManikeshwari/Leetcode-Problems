Given a string s containing an out-of-order English representation of digits 0-9, return the digits in ascending order.

 

Example 1:

Input: s = "owoztneoer"
Output: "012"
Example 2:

Input: s = "fviefuro"
Output: "45"

Solution--

class Solution:
    def originalDigits(self, s: str) -> str:
        cnt = Counter(s)
        digits = {}  # Create a dictionary to count the letter per digit
        digits[0]= cnt['z']  # Each letter z means number 0 
        digits[2]= cnt['w']
        digits[4]= cnt['u']
        digits[5]= cnt['f']-digits[4]
        digits[6]= cnt['x']
        digits[7]= cnt['v']-digits[5]
        digits[8]= cnt['g']
        digits[9]= cnt['i']-digits[8]-digits[6]-digits[5]
        digits[3]= cnt['h']-digits[8]
        digits[1]= cnt['o']-digits[0]-digits[2]-digits[4]
        res = ""
        for i in range(10): 
            res = res + str(i)*digits[i]
        return res        
