Given a string queryIP, return "IPv4" if IP is a valid IPv4 address, "IPv6" if IP is a valid IPv6 address or "Neither" if IP is not a correct IP of any type.

A valid IPv4 address is an IP in the form "x1.x2.x3.x4" where 0 <= xi <= 255 and xi cannot contain leading zeros. For example, "192.168.1.1" and "192.168.1.0" are valid IPv4 addresses while "192.168.01.1", "192.168.1.00", and "192.168@1.1" are invalid IPv4 addresses.

A valid IPv6 address is an IP in the form "x1:x2:x3:x4:x5:x6:x7:x8" where:

1 <= xi.length <= 4
xi is a hexadecimal string which may contain digits, lowercase English letter ('a' to 'f') and upper-case English letters ('A' to 'F').
Leading zeros are allowed in xi.
For example, "2001:0db8:85a3:0000:0000:8a2e:0370:7334" and "2001:db8:85a3:0:0:8A2E:0370:7334" are valid IPv6 addresses, while "2001:0db8:85a3::8A2E:037j:7334" and "02001:0db8:85a3:0000:0000:8a2e:0370:7334" are invalid IPv6 addresses.

 

Example 1:

Input: queryIP = "172.16.254.1"
Output: "IPv4"
Explanation: This is a valid IPv4 address, return "IPv4".
Example 2:

Input: queryIP = "2001:0db8:85a3:0:0:8A2E:0370:7334"
Output: "IPv6"
Explanation: This is a valid IPv6 address, return "IPv6".
Example 3:

Input: queryIP = "256.256.256.256"
Output: "Neither"
Explanation: This is neither a IPv4 address nor a IPv6 address.


class Solution:
    def validIPAddress(self, queryIP: str) -> str:
        ip4 = queryIP.split('.')
        ip6 = queryIP.split(':')
        if len(ip4) == 4:
            for i in ip4:
                if not i.isdigit():
                    return "Neither"
                if len(i) > 3 or (len(i) != 1 and i[0] == "0"):
                    return "Neither"
                if not (0 <= int(i) <= 255):
                    return "Neither"
            return "IPv4"

        ch = set('abcdefABCDEF')
        if len(ip6) == 8:
            for k in ip6:
                if len(k) > 4 or len(k) == 0:
                    return "Neither"
                for l in k:
                    if not (l.isdigit() or l in ch):
                        return "Neither"
            return "IPv6"
        
        return "Neither"
